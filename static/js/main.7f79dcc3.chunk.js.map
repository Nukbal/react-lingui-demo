{"version":3,"sources":["../ /^/.//.*//messages/.json$/ groupOptions: {} namespace object","i18n.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","./en/messages.json","./ja/messages.json","./ko-kr/messages.json","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","defaultLocale","loadCatalog","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","locale","wrap","_context","prev","next","abrupt","concat","stop","_x","apply","this","arguments","i18n","setupI18n","willActivate","Root","useLingui","_useState","useState","_useState2","slicedToArray","setLocale","_useState3","_useState4","text","setText","_useState5","_useState6","random","setRandom","_useState7","_useState8","num","setNum","useEffect","activate","toEnglish","useCallback","toKorean","toJapanese","handleTextChange","target","value","generateRandomText","randomArray","message","_","Math","floor","length","increase","n","decrease","react_default","createElement","Fragment","className","undefined","onClick","_lingui_react","components","0","href","rel","1","type","name","placeholder","onChange","values","number","format","style","currency","date","Date","App","Boolean","window","location","hostname","match","rootElement","document","getElementById","hasChildNodes","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAA,IAAAA,EAAA,CACAC,qBAAA,CACA,IACA,GAEAC,qBAAA,CACA,IACA,GAEAC,wBAAA,CACA,IACA,IAGA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAP,EAAAK,GACA,OAAAG,QAAAC,UAAAC,KAAA,WACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAP,EAAA,KAEA,MADAM,EAAAE,KAAA,mBACAF,IAIA,IAAAG,EAAAd,EAAAK,GAAAU,EAAAD,EAAA,GACA,OAAAR,EAAAK,EAAAG,EAAA,IAAAJ,KAAA,WACA,OAAAJ,EAAAU,EAAAD,EAAA,KAGAX,EAAAa,KAAA,WACA,OAAAC,OAAAD,KAAAjB,IAEAI,EAAAW,GAAA,IACAI,EAAAC,QAAAhB,0JC7BaiB,EAAgB,KAEvBC,EAAW,eAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACX5B,EAAA,IAAAA,CAAA,KAAA6B,OACqBN,EADrB,oBADW,wBAAAE,EAAAK,SAAAR,MAAH,gBAAAS,GAAA,OAAAd,EAAAe,MAAAC,KAAAC,YAAA,GAKJC,EAAOC,sBACpBD,EAAKE,aAAarB,UCFlB,SAASsB,IAAO,IACNH,EAASI,sBAATJ,KADMK,EAEcC,mBAAS1B,GAFvB2B,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA4B,EAAA,GAEPjB,EAFOmB,EAAA,GAECE,EAFDF,EAAA,GAAAG,EAGUJ,mBAAS,IAHnBK,EAAAlC,OAAA+B,EAAA,EAAA/B,CAAAiC,EAAA,GAGPE,EAHOD,EAAA,GAGDE,EAHCF,EAAA,GAAAG,EAIcR,mBAAS,IAJvBS,EAAAtC,OAAA+B,EAAA,EAAA/B,CAAAqC,EAAA,GAIPE,EAJOD,EAAA,GAICE,EAJDF,EAAA,GAAAG,EAKQZ,mBAAS,GALjBa,EAAA1C,OAAA+B,EAAA,EAAA/B,CAAAyC,EAAA,GAKPE,EALOD,EAAA,GAKFE,EALEF,EAAA,GAOdG,oBAAU,WACJtB,EAAKZ,SAAWA,GAAQY,EAAKuB,SAASnC,IACzC,CAACY,EAAMZ,IAEV,IAAMoC,EAAYC,sBAAY,kBAAMhB,EAAU,OAAO,IAC/CiB,EAAWD,sBAAY,kBAAMhB,EAAU,UAAU,IACjDkB,EAAaF,sBAAY,kBAAMhB,EAAU,OAAO,IAEhDmB,EAAmBH,sBAAY,SAAA3C,GAAA,IAAG+C,EAAH/C,EAAG+C,OAAH,OAAqBhB,EAAQgB,EAAOC,QAAQ,IAC3EC,EAAqBN,sBAAY,WACrC,IAAMO,EAAc,CACJ,CAAE1D,GAAI,SAAN2D,QAAyB,4BACzB,CAAE3D,GAAI,SAAN2D,QAAyB,gBACzB,CAAE3D,GAAI,SAAN2D,QAAyB,mCAEzChB,EAAUjB,EAAKkC,EAAEF,EAAYG,KAAKC,MAAMD,KAAKnB,SAAWgB,EAAYK,YACnE,CAACrC,IAEEsC,EAAWb,sBAAY,kBAAMJ,EAAO,SAAAkB,GAAC,OAAIA,EAAI,KAAI,IACjDC,EAAWf,sBAAY,kBAAMJ,EAAO,SAAAkB,GAAC,OAAU,IAANA,EAAUA,EAAI,EAAIA,KAAI,IAErE,OACEE,EAAAxD,EAAAyD,cAAAD,EAAAxD,EAAA0D,SAAA,KACEF,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,UAAQE,UAAsB,OAAXxD,EAAkB,gBAAayD,EAAWC,QAAStB,GAAtE,WAGAiB,EAAAxD,EAAAyD,cAAA,UAAQE,UAAsB,UAAXxD,EAAqB,gBAAayD,EAAWC,QAASpB,GAAzE,sBAGAe,EAAAxD,EAAAyD,cAAA,UAAQE,UAAsB,OAAXxD,EAAkB,gBAAayD,EAAWC,QAASnB,GAAtE,uBAIFc,EAAAxD,EAAAyD,cAAA,YACED,EAAAxD,EAAAyD,cAAA,UAAID,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,2BACJmE,EAAAxD,EAAAyD,cAAA,eACED,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,qLAAA0E,WAAA,CAAAC,EAEYR,EAAAxD,EAAAyD,cAAA,KAAGQ,KAAK,yBAAyBrB,OAAO,SAASsB,IAAI,wBAFjEC,EAGEX,EAAAxD,EAAAyD,cAAA,KAAGQ,KAAK,uBAAuBrB,OAAO,SAASsB,IAAI,4BAGvDV,EAAAxD,EAAAyD,cAAA,eACED,EAAAxD,EAAAyD,cAAA,UAAID,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,qBACFmE,EAAAxD,EAAAyD,cAAA,SACEW,KAAK,OACLC,KAAK,OACLC,YAAavD,EAAKkC,EAAE,CAAA5D,GAAA,iEACpBwD,MAAOlB,EACP4C,SAAU5B,IAEda,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,aAAAmF,OAAA,CAAA7C,KAAkCA,MAEpC6B,EAAAxD,EAAAyD,cAAA,eACED,EAAAxD,EAAAyD,cAAA,UAAID,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,sBACJmE,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,+IAAsCmE,EAAAxD,EAAAyD,cAAA,WACtCD,EAAAxD,EAAAyD,cAAA,UAAQI,QAASf,GAAoBU,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,kBAA0BmE,EAAAxD,EAAAyD,cAAA,WAC/DD,EAAAxD,EAAAyD,cAAA,YAAO1B,IAETyB,EAAAxD,EAAAyD,cAAA,eACED,EAAAxD,EAAAyD,cAAA,UAAID,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,kBACJmE,EAAAxD,EAAAyD,cAAA,YACG1C,EAAK0D,OAAO,IAAO,CAACC,OAAQ,CAAEC,MAAO,WAAYC,SAAU,UAE9DpB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,YACED,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,oPAAAmF,OAAA,CAAArC,IACSA,MAMXqB,EAAAxD,EAAAyD,cAAA,WACAD,EAAAxD,EAAAyD,cAAA,UAAQI,QAASR,GAAjB,KACAG,EAAAxD,EAAAyD,cAAA,UAAQI,QAASN,GAAjB,MAEFC,EAAAxD,EAAAyD,cAAA,eACED,EAAAxD,EAAAyD,cAAA,UAAID,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,kBACJmE,EAAAxD,EAAAyD,cAAAK,EAAA,OAAAzE,GAAA,qCAAAmF,OAAA,CAAAR,EAAYjD,EAAK8D,KAAK,IAAIC,YAOrB,SAASC,IAOtB,OALA1C,oBAAU,WACRtB,EAAKuB,SAAS3C,IACb,IAGI6D,EAAAxD,EAAAyD,cAACK,EAAA,aAAD,CAAc/C,KAAMA,GAAMyC,EAAAxD,EAAAyD,cAACvC,EAAD,OCnGf8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXN,IAAMC,EAAcC,SAASC,eAAe,QACxCF,EAAYG,gBACdC,kBAAQjC,EAAAxD,EAAAyD,cAACsB,EAAD,MAASM,GAEjBK,iBAAOlC,EAAAxD,EAAAyD,cAACsB,EAAD,MAASM,GDsHZ,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAM7G,KAAK,SAAC8G,GAClCA,EAAaC","file":"static/js/main.7f79dcc3.chunk.js","sourcesContent":["var map = {\n\t\"./en/messages.json\": [\n\t\t187,\n\t\t0\n\t],\n\t\"./ja/messages.json\": [\n\t\t188,\n\t\t1\n\t],\n\t\"./ko-kr/messages.json\": [\n\t\t189,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 184;\nmodule.exports = webpackAsyncContext;","// @ts-ignore\nimport { setupI18n } from '@lingui/core';\n\nexport const defaultLocale = 'en';\n\nconst loadCatalog = async (locale: string) => {\n  return import(/* webpackMode: 'lazy', webpackChunkName: 'i18n-[index]' */\n  `@lingui/loader!./locales/${locale}/messages.json`);\n};\n\nexport const i18n = setupI18n();\ni18n.willActivate(loadCatalog);\n","import React, { useState, useCallback, useEffect } from 'react';\n// @ts-ignore\nimport { I18nProvider, useLingui } from '@lingui/react';\n// @ts-ignore\nimport { t, Trans, Plural, defineMessage } from '@lingui/macro';\nimport { defaultLocale, i18n } from './i18n';\n\nimport './styles.css';\n\nfunction Root() {\n  const { i18n } = useLingui()\n  const [locale, setLocale] = useState(defaultLocale);\n  const [text, setText] = useState('');\n  const [random, setRandom] = useState('');\n  const [num, setNum] = useState(0);\n\n  useEffect(() => {\n    if (i18n.locale !== locale) i18n.activate(locale);\n  }, [i18n, locale]);\n\n  const toEnglish = useCallback(() => setLocale('en'), []);\n  const toKorean = useCallback(() => setLocale('ko-kr'), []);\n  const toJapanese = useCallback(() => setLocale('ja'), []);\n\n  const handleTextChange = useCallback(({ target }: any) => setText(target.value), []);\n  const generateRandomText = useCallback(() => {\n    const randomArray = [\n      defineMessage({ id: 'rand.0', message: 'ランダム' }),\n      defineMessage({ id: 'rand.1', message: 'では' }),\n      defineMessage({ id: 'rand.2', message: 'ありません' }),\n    ];\n    setRandom(i18n._(randomArray[Math.floor(Math.random() * randomArray.length)]));\n  }, [i18n]);\n\n  const increase = useCallback(() => setNum(n => n + 1), []);\n  const decrease = useCallback(() => setNum(n => n !== 0 ? n - 1 : n), []);\n\n  return (\n    <>\n      <nav>\n        <button className={locale === 'en' ? 'disabled' : undefined} onClick={toEnglish}>\n          English\n        </button>\n        <button className={locale === 'ko-kr' ? 'disabled' : undefined} onClick={toKorean}>\n          한국어\n        </button>\n        <button className={locale === 'ja' ? 'disabled' : undefined} onClick={toJapanese}>\n          日本語\n        </button>\n      </nav>\n      <main>\n        <h1><Trans>LinguiJS デモ</Trans></h1>\n        <section>\n          <Trans>\n            このプロジェクトは\n            国際化のライブラリの<a href=\"https://lingui.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">LinguiJS</a>の\n            <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">React</a>デモです。\n          </Trans>\n        </section>\n        <section>\n          <h3><Trans>JSX対応</Trans></h3>\n            <input\n              type=\"text\"\n              name=\"text\"\n              placeholder={i18n._(t`名前を書いてください`)}\n              value={text}\n              onChange={handleTextChange}\n            />\n          <br />\n          <Trans id=\"input-text\">おはようございます。{text}さん</Trans>\n        </section>\n        <section>\n          <h3><Trans>javascript側</Trans></h3>\n          <Trans>ボタンを押したらランダムなテキストを表示します</Trans><br />\n          <button onClick={generateRandomText}><Trans>生成</Trans></button><br />\n          <span>{random}</span>\n        </section>\n        <section>\n          <h3><Trans>数値</Trans></h3>\n          <span>\n            {i18n.number(10000, {format: { style: 'currency', currency: 'JPY' }})}\n          </span>\n          <br />\n          <span>\n            <Plural\n              value={num}\n              _0=\"誰も来なかったんです\"\n              _1=\"1人のゲストさんが来ました\"\n              other=\"#人のゲストさんが来ました\"\n            />\n          </span>\n          <br />\n          <button onClick={increase}>+</button>\n          <button onClick={decrease}>-</button>\n        </section>\n        <section>\n          <h3><Trans>日付</Trans></h3>\n          <Trans>今日は {i18n.date(new Date())}です</Trans>\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default function App() {\n\n  useEffect(() => {\n    i18n.activate(defaultLocale);\n  }, []);\n\n  // @ts-ignore\n  return <I18nProvider i18n={i18n}><Root /></I18nProvider>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'core-js/fn/symbol/iterator';\nimport React from 'react';\nimport { render, hydrate } from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root')!;\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}